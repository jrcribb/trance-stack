name: 'Verify & Build'

on:
  push:
    branches: [ main, alpha, beta ]

env:
  LEFTHOOK: 0
  ARC_APP_SECRET: ${{ secrets.ARC_APP_SECRET }}

jobs:
  verify:
    uses: meza/shared-github-workflows/.github/workflows/default-node-pnpm-ci.yml@main
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      node-version: "latest"
      junit-report-path: "reports/junit.xml"
      cobertura-report-path: "reports/**/cobertura-coverage.xml"
  build:
    runs-on: 'ubuntu-latest'
    needs: [ verify ]
    if: needs.verify.outputs.new-release-published == 'true'
    steps:
      - uses: actions/checkout@v3
      - name: Set up node
        uses: meza/action-setup-node-pnpm@main
        with:
          node-version: latest
          cache-name: ${{ needs.verify.outputs.cache-name }}
      - name: Set environment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          pnpm exec arc env -e ${{ github.ref_name }} SPLIT_SERVER_TOKEN ${{ secrets.SPLIT_SERVER_TOKEN }}
          pnpm exec arc env -e ${{ github.ref_name }} SESSION_SECRET ${{ secrets.SESSION_SECRET }}
          pnpm exec arc env -e ${{ github.ref_name }} HOTJAR_ID ${{ vars.HOTJAR_ID }}
          pnpm exec arc env -e ${{ github.ref_name }} MIXPANEL_API ${{ vars.MIXPANEL_API }}
          pnpm exec arc env -e ${{ github.ref_name }} MIXPANEL_TOKEN ${{ vars.MIXPANEL_TOKEN }}
          pnpm exec arc env -e ${{ github.ref_name }} COOKIEYES_TOKEN ${{ vars.COOKIEYES_TOKEN }}
          pnpm exec arc env -e ${{ github.ref_name }} I18N_DEBUG ${{ github.ref_name == 'main' && 'false' || 'true' }}
          pnpm exec arc env -e ${{ github.ref_name }} SPLIT_DEBUG ${{ github.ref_name == 'main' && 'false' || 'true' }}
      - name: Set version
        run: npm version --no-git-tag-version ${{ needs.verify.outputs.new-release-version }}
      - name: Build
        run: pnpm build
      - name: ðŸ“¦ Deploy Production
        if: github.ref_name == 'main'
        run: pnpm exec arc deploy --production --name main -v
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: ðŸ“¦ Deploy ${{ github.ref_name }}
        if: github.ref_name != 'main'
        run: pnpm exec arc deploy --name ${{ github.ref_name }} -v
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: ðŸš€ Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm release
